// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders Meditation With the Loading Screen 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#00A89D"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "transform": Array [
            Object {
              "scale": 2.5,
            },
          ],
        }
      }
    />
  </View>
</View>
`;

exports[`Renders Meditation Without the Loading Screen 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "paddingHorizontal": "2%",
        "paddingTop": "2%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginBottom": "2%",
        }
      }
    >
      <Image
        source={
          Object {
            "uri": "https://healthylatinalifestylecom.files.wordpress.com/2017/10/cropped-cropped-peackcock-color-healthy-latino-20171.jpg",
          }
        }
        style={
          Object {
            "alignSelf": "center",
            "aspectRatio": 1,
            "borderRadius": 667,
            "height": null,
            "width": "80%",
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "aspectRatio": 1,
            "backgroundColor": "#00A89D",
            "borderRadius": 667,
            "height": null,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": "12%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "overflow": "hidden",
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <Text
        style={
          Object {
            "fontSize": 28,
            "textAlign": "center",
          }
        }
      >
        Relax and Recharge
      </Text>
      <View
        style={
          Object {
            "marginBottom": "2%",
          }
        }
      >
        <View>
          <RNCSlider
            disabled={false}
            enabled={true}
            inverted={false}
            maximumTrackTintColor="#000"
            maximumValue={340}
            minimumTrackTintColor="#967eda"
            minimumValue={0}
            onChange={[Function]}
            onRNCSliderSlidingComplete={[Function]}
            onRNCSliderSlidingStart={null}
            onRNCSliderValueChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            step={1}
            style={
              Object {
                "height": 40,
              }
            }
            thumbImage={
              Object {
                "__packager_asset": true,
                "height": 1,
                "scale": 1,
                "uri": "uri",
                "width": 1,
              }
            }
            value={0}
          />
          <View
            style={
              Object {
                "alignSelf": "center",
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#242424",
                }
              }
            >
              00:00
               | 
              05:40
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-evenly",
              "marginVertical": "1%",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
        </View>
      </View>
      <RCTScrollView
        style={
          Object {
            "marginBottom": "5%",
            "marginTop": "2%",
          }
        }
      >
        <View>
          <Text>
            Deep breathing exercises to help lower your anxiety.
          </Text>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
