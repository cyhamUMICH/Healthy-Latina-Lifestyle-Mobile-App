// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders Timer With the Loading Screen 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "paddingHorizontal": "2%",
        "paddingTop": "2%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "flex": 1,
          "marginTop": "10%",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityLabel="Countdown timer"
        accessible={true}
        style={
          Object {
            "height": 180,
            "position": "relative",
            "width": 180,
          }
        }
      >
        <RNSVGSvgView
          bbHeight={180}
          bbWidth={180}
          focusable={false}
          height={180}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 180,
                "width": 180,
              },
            ]
          }
          width={180}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="m 90,6
          a 84,84 0 1,0 0,168
          a 84,84 0 1,0 0,-168"
              fill={null}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={4292072403}
              strokeWidth={12}
            />
            <RNSVGPath
              d="m 90,6
          a 84,84 0 1,0 0,168
          a 84,84 0 1,0 0,-168"
              fill={null}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                  "strokeDasharray",
                  "strokeDashoffset",
                  "strokeLinecap",
                ]
              }
              stroke={4278208375}
              strokeDasharray={
                Array [
                  527.7875658030853,
                  527.7875658030853,
                ]
              }
              strokeDashoffset={null}
              strokeLinecap={1}
              strokeWidth={12}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
        <View
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "height": "100%",
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "rgba(0, 71, 119, 1)",
                "fontSize": 30,
              }
            }
          >
            00:00:30
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignSelf": "center",
            "flexDirection": "row",
            "marginTop": "10%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "aspectRatio": 1,
              "backgroundColor": "#00A89D",
              "borderRadius": 667,
              "height": null,
              "marginHorizontal": "5%",
              "opacity": 1,
              "width": "15%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "overflow": "hidden",
                }
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "aspectRatio": 1,
              "backgroundColor": "#00A89D",
              "borderRadius": 667,
              "height": null,
              "marginHorizontal": "5%",
              "opacity": 1,
              "width": "15%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "overflow": "hidden",
                }
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
            Object {
              "zIndex": 5000,
            },
            Object {
              "marginTop": "5%",
            },
            false,
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#000",
              "borderRadius": 8,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": 50,
              "justifyContent": "space-between",
              "opacity": 1,
              "paddingHorizontal": 10,
              "width": "100%",
              "zIndex": 5000,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "flex": 1,
                },
                Object {
                  "fontSize": 18,
                  "textAlign": "left",
                },
                false,
                Object {},
              ]
            }
          >
            Select an intention...
          </Text>
          <View
            style={
              Array [
                Object {
                  "marginLeft": 10,
                },
                Object {},
              ]
            }
          >
            <Image
              source={1}
              style={
                Array [
                  Object {
                    "height": 20,
                    "width": 20,
                  },
                  Object {},
                ]
              }
            />
          </View>
        </View>
      </View>
      <RCTScrollView
        style={
          Object {
            "alignSelf": "flex-start",
            "marginVertical": "2%",
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "fontSize": 18,
                "textAlign": "left",
              }
            }
          />
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`Renders Timer Without the Loading Screen 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "paddingHorizontal": "2%",
        "paddingTop": "2%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "flex": 1,
          "marginTop": "10%",
          "width": "100%",
        }
      }
    >
      <View
        accessibilityLabel="Countdown timer"
        accessible={true}
        style={
          Object {
            "height": 180,
            "position": "relative",
            "width": 180,
          }
        }
      >
        <RNSVGSvgView
          bbHeight={180}
          bbWidth={180}
          focusable={false}
          height={180}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 180,
                "width": 180,
              },
            ]
          }
          width={180}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="m 90,6
          a 84,84 0 1,0 0,168
          a 84,84 0 1,0 0,-168"
              fill={null}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={4292072403}
              strokeWidth={12}
            />
            <RNSVGPath
              d="m 90,6
          a 84,84 0 1,0 0,168
          a 84,84 0 1,0 0,-168"
              fill={null}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                  "strokeDasharray",
                  "strokeDashoffset",
                  "strokeLinecap",
                ]
              }
              stroke={4278208375}
              strokeDasharray={
                Array [
                  527.7875658030853,
                  527.7875658030853,
                ]
              }
              strokeDashoffset={null}
              strokeLinecap={1}
              strokeWidth={12}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
        <View
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "height": "100%",
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "rgba(0, 71, 119, 1)",
                "fontSize": 30,
              }
            }
          >
            00:00:30
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignSelf": "center",
            "flexDirection": "row",
            "marginTop": "10%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "aspectRatio": 1,
              "backgroundColor": "#00A89D",
              "borderRadius": 667,
              "height": null,
              "marginHorizontal": "5%",
              "opacity": 1,
              "width": "15%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "overflow": "hidden",
                }
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "aspectRatio": 1,
              "backgroundColor": "#00A89D",
              "borderRadius": 667,
              "height": null,
              "marginHorizontal": "5%",
              "opacity": 1,
              "width": "15%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "overflow": "hidden",
                }
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
            Object {
              "zIndex": 5000,
            },
            Object {
              "marginTop": "5%",
            },
            false,
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#000",
              "borderRadius": 8,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": 50,
              "justifyContent": "space-between",
              "opacity": 1,
              "paddingHorizontal": 10,
              "width": "100%",
              "zIndex": 5000,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "flex": 1,
                },
                Object {
                  "fontSize": 18,
                  "textAlign": "left",
                },
                false,
                Object {},
              ]
            }
          >
            Select an intention...
          </Text>
          <View
            style={
              Array [
                Object {
                  "marginLeft": 10,
                },
                Object {},
              ]
            }
          >
            <Image
              source={1}
              style={
                Array [
                  Object {
                    "height": 20,
                    "width": 20,
                  },
                  Object {},
                ]
              }
            />
          </View>
        </View>
      </View>
      <RCTScrollView
        style={
          Object {
            "alignSelf": "flex-start",
            "marginVertical": "2%",
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "fontSize": 18,
                "textAlign": "left",
              }
            }
          />
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
